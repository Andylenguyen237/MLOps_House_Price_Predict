name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev

      # Step to train the model and generate artefacts
      - name: Train Model
        run: pipenv run python model_api.py tune

      - name: Run Unit Tests
        run: pipenv run pytest tests/

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Install Google Cloud SDK directly
      - name: Install Google Cloud SDK
        run: |
          curl -sSL https://sdk.cloud.google.com | bash > /dev/null
          echo "source /home/runner/google-cloud-sdk/path.bash.inc" >> $HOME/.bashrc
          source /home/runner/google-cloud-sdk/path.bash.inc
          gcloud components install kubectl
          gcloud components update

      # Decode and Verify the base64-encoded GCP service account key
      - name: Decode and Verify GCP Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY_B64 }}" | base64 -d > $HOME/gcp-key.json
          cat $HOME/gcp-key.json

      # Authenticate with Google Cloud using the decoded key
      - name: Authenticate to Google Cloud
        run: |
          gcloud auth activate-service-account --key-file=$HOME/gcp-key.json
          gcloud config set project ${{ secrets.GCP_PROJECT }}

      # Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/mlops_house_price_predict:latest .

      # Push Docker Image to GCR
      - name: Push Docker Image to GCR
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT }}/mlops_house_price_predict:latest

      # Authenticate kubectl with GKE
      - name: Set up Kubeconfig for GKE
        run: |
          gcloud container clusters get-credentials house-price --zone us-central1-c --project ${{ secrets.GCP_PROJECT }}

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deploy.yaml
